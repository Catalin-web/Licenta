version: '3.4'

services:
  notebookservice.webapi:
    image: ${DOCKER_REGISTRY-}notebookservicewebapi
    build:
      context: .
      dockerfile: NotebookService.WebApi/Dockerfile
    ports:
      - "12700:12700"
    environment:
      NOTEBOOKSERVICE_BINDING_ADRESS: http://*
      NOTEBOOKSERVICE_BINDING_PORT: 12700
      NOTEBOOKSERVICE_CONNECTION_STRING: mongodb://mongodb:27017/app
      NOTEBOOKSERVICE_SCHEDULE_NOTEBOOK_DELAY: 1
      NOTEBOOKSERVICE_ARGO_BASE_URL: https://host.docker.internal:2746
      OTEL_URL: http://otel:4317
    depends_on:
      - mongodb
      - otel

  mongodb:
    image: bitnami/mongodb:6.0.2
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: app
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 200M

  otel:
    # See https://opentelemetry.io/docs/collector/
    image: otel/opentelemetry-collector-contrib:0.95.0
    command: ["--config=/etc/otel-collector-config.yml"]
    ports:
      - 4317:4317  # gRPC receiver
      - "8889"  # Prometheus exporter metrics
      - "13133" # health_check extension
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml:ro

  prometheus:
    # See https://prometheus.io/docs/prometheus/latest/installation/#using-docker
    image: prom/prometheus:v2.49.1
    ports:
      - 9090:9090
    volumes:
      - ./prometheus-config.yml:/etc/prometheus/prometheus.yml:ro

  jaeger:
    # See https://www.jaegertracing.io/docs/1.38/deployment/#all-in-one
    image: jaegertracing/all-in-one:1.54.0
    ports:
      - "14269"     # Admin port (health check and /metrics)
      - 16686:16686 # Jaeger frontend
      - "4317"      # Trace data receive port (otlp).